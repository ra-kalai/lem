# @configure_input@
CC           = @CC@
CFLAGS       = @CFLAGS@
CPPFLAGS     = @CPPFLAGS@
CPPFLAGS    += @CPPFLAGS_ADD@
LDFLAGS      = @LDFLAGS@
SHARED       = @SHARED@
LIBS         = @LIBS@

INSTALL      = @INSTALL@
SED          = @SED@
STRIP        = @STRIP@

prefix       = @prefix@
exec_prefix  = @exec_prefix@
bindir       = @bindir@
includedir   = @includedir@
libdir       = @libdir@
datarootdir  = @datarootdir@
pkgconfigdir = @pkgconfigdir@
lmoddir      = @lmoddir@
cmoddir      = @cmoddir@

headers      = @headers@
objects      = @objects@
objects_static      = @objects_static@

llibs = \
	lem/cmd.lua \
	lem/utils.lua \
	lem/repl.lua \
	lem/parsers.lua \
	lem/io.lua \
	lem/io/queue.lua \
	lem/os.lua \
	lem/signal.lua \
	lem/lfs.lua \
	lem/http.lua \
	lem/http/response.lua \
	lem/http/server.lua \
	lem/http/client.lua \
	lem/queue.lua \
	lem/hathaway.lua 

clibs = \
	lem/utils/core.so \
	lem/parsers/core.so \
	lem/io/core.so \
	lem/os/core.so \
	lem/signal/core.so \
	lem/lfs/core.so \
	lem/http/core.so

ifdef V
E=@\#
Q=
else
E=@echo
Q=@
endif

ifdef COVERAGE
CFLAGS += -fprofile-arcs -ftest-coverage -O0 -g
LDFLAGS += --coverage -fprofile-arcs -ftest-coverage -g
endif

ifndef DEBUG
  CPPFLAGS += -DNDEBUG
endif

ifeq ($(OS), Windows_NT)
clibs := $(clibs:.so=.dll)
endif

.PHONY: all strip install clean bin/static-llib.c bin/static-clib.c

all: bin/lem bin/local-lem lem.pc $(clibs)

debug: bin/lem lem.pc $(clibs)

bin/libev.o: CFLAGS += -w
include/lem.h: lua/luaconf.h
bin/lua.o: lua/luaconf.h
bin/lem.o: include/lem.h bin/pool.c
bin/lem.o: CPPFLAGS += -D'LEM_LDIR="$(lmoddir)/"'


io_core_file_list = include/lem-parsers.h \
							 lem/io/file.c \
							 lem/io/stream.c \
							 lem/io/server.c \
							 lem/io/unix.c \
							 lem/io/tcp.c \
							 lem/io/udp.c \
							 lem/io/tty.c \
							 lem/io/lem_spawnx.c

lem/io/core.so: $(io_core_file_list)
lem/parsers/core.so: include/lem-parsers.h
lem/http/core.so: include/lem-parsers.h

lem/io/core.dll: $(io_core_file_list)
lem/parsers/core.dll: include/lem-parsers.h
lem/http/core.dll: include/lem-parsers.h

%.o: %.c
	$E '  CC    $@'
	$Q$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

bin/lem: $(objects)
ifneq ($(OS), Windows_NT)
	$E '  LD    $@'
	$Q$(CC) $^ -o $@ -rdynamic $(LDFLAGS) $(LIBS)
else
	$Qdlltool --export-all --output-def lem.def $^
	$Qdlltool --dllname bin/lem.exe --def lem.def --output-lib liblem.a
	$Qdlltool --dllname bin/lem.exe --output-exp lem.exp --def lem.def
	$Qgcc -g $^ -o bin/lem.exe -Wl,--base-file,lem.base lem.exp $(LDFLAGS) $(LIBS)
	$Qdlltool --dllname bin/lem.exe --base-file lem.base --output-exp lem.exp --def lem.def
	$Qgcc -g $^ -o bin/lem.exe lem.exp $(LDFLAGS) $(LIBS)
	$Qrm lem.exp lem.base
endif

bin/local-lem: bin/lem
	$E '  LN    $@'
	ln -sf lem bin/local-lem

bin/static-llib.c: bin/local-lem $(llibs) bin/pack-lib.lua
	$E '  LUA-TO-C    $@'
	bin/pack-lib.lua bin/static-llib.c bin/static-clib-extra.h bin/static-extra-objlist

bin/lem-s.o: CPPFLAGS += -DSTATIC_LEM
bin/lem-s.o: CPPFLAGS += -D'LEM_LDIR="$(lmoddir)/"'
bin/lem-s.o:  bin/lem.c bin/static-llib.c bin/static-clib.c
	$E '  CC    $@'
	$Q$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o bin/lem-s.o

bin/lem-s: $(objects_static)
	$E '  LD    $@'
	$Q$(CC) $^ $(shell cat bin/static-extra-objlist) -o $@ -rdynamic $(LDFLAGS) $(LIBS)

%.so: %.c include/lem.h
	$E '  CCLD  $@'
	$Q$(CC) $(CFLAGS) $(CPPFLAGS) -fPIC -nostartfiles $(SHARED) $< -o $@ $(LDFLAGS)

%.dll: %.c include/lem.h
	$E '  CCLD  $@'
	$Q$(CC) $(CFLAGS) $(CPPFLAGS) -nostartfiles $(SHARED) $< -o $@ $(LDFLAGS) liblem.a

lua/luaconf.h: lua/luaconf.h.in
	$E '  SED > $@'
	$Q$(SED) \
	  -e 's|@lmoddir[@]|$(lmoddir)|' \
	  -e 's|@cmoddir[@]|$(cmoddir)|' \
	  $< > $@

lem.pc: lem.pc.in
	$E '  SED > $@'
	$Q$(SED) \
	  -e 's|@lmoddir[@]|$(lmoddir)|' \
	  -e 's|@cmoddir[@]|$(cmoddir)|' \
	  -e 's|@includedir[@]|$(includedir)|' \
	  -e 's|@Lua_CFLAGS[@]|@Lua_CFLAGS@|' \
	  $< > $@

%-strip: %
	$E '  STRIP $<'
	$Q$(STRIP) $(STRIP_ARGS) $<

strip: bin/lem-strip $(clibs:%=%-strip)

$(DESTDIR)$(bindir)/%: bin/%
	$E '  INSTALL $@'
	$Q$(INSTALL) -d $(dir $@)
	$Q$(INSTALL) -m 755 $< $@

$(DESTDIR)$(includedir)/lem/%: lua/%
	$E '  INSTALL $@'
	$Q$(INSTALL) -d $(dir $@)
	$Q$(INSTALL) -m 644 $< $@

$(DESTDIR)$(includedir)/lem/%: libev/%
	$E '  INSTALL $@'
	$Q$(INSTALL) -d $(dir $@)
	$Q$(INSTALL) -m 644 $< $@

$(DESTDIR)$(includedir)/lem/%: include/%
	$E '  INSTALL $@'
	$Q$(INSTALL) -d $(dir $@)
	$Q$(INSTALL) -m 644 $< $@

$(DESTDIR)$(lmoddir)/% $(DESTDIR)$(cmoddir)/% $(DESTDIR)$(pkgconfigdir)/%: %
	$E '  INSTALL $@'
	$Q$(INSTALL) -d $(dir $@)
	$Q$(INSTALL) -m 644 $< $@

install: \
	$(DESTDIR)$(bindir)/lem \
	$(DESTDIR)$(pkgconfigdir)/lem.pc \
	$(headers:%=$(DESTDIR)$(includedir)/lem/%) \
	$(llibs:%=$(DESTDIR)$(lmoddir)/%) \
	$(clibs:%=$(DESTDIR)$(cmoddir)/%)

clean:
	rm -f bin/lem bin/local-lem bin/lem-s bin/*.o lem/*/core.so.o $(clibs) lua/luaconf.h lem.pc bin/static-llib.c
